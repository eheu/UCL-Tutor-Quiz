{"version":3,"sources":["components/Layout/Layout.tsx","components/QuizQuestion/QuizQuestion.tsx","components/App/App.tsx","index.tsx"],"names":["Layout","props","className","children","QuizQuestion","useWindowSize","width","height","sleep","ms","Promise","resolve","setTimeout","u","useRef","c","l","onSubmit","values","a","timeLine","play","md5Answer","md5","answer","trim","toLowerCase","console","log","i","correctMd5Answers","length","correctHashedAnswer","restart","pause","blinkLogoRed","renderNextQuestion","FORM_ERROR","blinkLogoGreen","useEffect","to","current","rotation","transformOrigin","rotateLogo","confetti","render","submitError","handleSubmit","submitting","pristine","xmlns","version","viewBox","ref","id","fill","d","opacity","question","name","input","type","placeholder","autoComplete","disabled","hint","TweenMax","fromTo","repeat","yoyo","questions","TimelineMax","paused","useState","count","setCount","success","percent","getPercentFromCount","strokeWidth","strokeColor","document","getElementById"],"mappings":"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","file":"static/js/main.ac75323c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./layout.css\";\r\n\r\nconst Layout: FC = props => (\r\n  <div className=\"container\">\r\n    <main>{props.children}</main>\r\n  </div>\r\n);\r\n\r\nexport { Layout };\r\n","import React, { useRef, useEffect, SFC } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { TimelineMax, TweenMax } from \"gsap\";\r\nimport md5 from \"md5\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport Confetti from \"react-confetti\";\r\nimport \"./quizquestion.css\";\r\n\r\ninterface IProps {\r\n  renderNextQuestion: (success: boolean) => void;\r\n  question: string;\r\n  correctMd5Answers: string[];\r\n  timeLine: TimelineMax;\r\n  hint?: string;\r\n  confetti?: boolean;\r\n}\r\n\r\nconst QuizQuestion: SFC<IProps> = props => {\r\n  const { width, height } = useWindowSize();\r\n  const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n  const u = useRef<SVGPathElement>(null);\r\n  const c = useRef<SVGPathElement>(null);\r\n  const l = useRef<SVGPathElement>(null);\r\n\r\n  const onSubmit = async (values: any) => {\r\n    props.timeLine.play();\r\n    const md5Answer = md5((values.answer as string).trim().toLowerCase());\r\n    console.log(values.answer);\r\n    await sleep(3000);\r\n    for (let i = 0; i < props.correctMd5Answers.length; i++) {\r\n      const correctHashedAnswer = props.correctMd5Answers[i];\r\n      if (md5Answer !== correctHashedAnswer.trim().toLowerCase() && i === props.correctMd5Answers.length - 1) {\r\n        props.timeLine.restart();\r\n        props.timeLine.pause();\r\n        blinkLogoRed(u, c, l);\r\n        props.renderNextQuestion(false);\r\n        return { [FORM_ERROR]: \"Forkert svar!\" };\r\n      }\r\n      if (md5Answer === correctHashedAnswer.trim().toLowerCase()) {\r\n        props.timeLine.restart();\r\n        props.timeLine.pause();\r\n        blinkLogoGreen(u, c, l);\r\n        props.renderNextQuestion(true);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    rotateLogo(props.timeLine, u, c, l);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {props.confetti && <Confetti width={width} height={height}/>}\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        render={({ submitError, handleSubmit, submitting, pristine }) => (\r\n          <>\r\n            <form onSubmit={handleSubmit}>\r\n              <svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100pt\" height=\"70pt\" version=\"1.1\" viewBox=\"0 0 1000 709\">\r\n                <path ref={u} id=\"u\" fill=\"#ffffff\" d=\" M 0.00 0.00 L 96.06 0.00 C 100.40 18.33 103.70 37.12 111.48 54.41 C 115.31 63.06 120.47 71.11 126.78 78.16 C 152.36 109.49 192.58 128.40 233.06 127.65 C 277.32 124.98 318.66 97.59 340.01 58.98 C 349.59 40.66 352.50 19.95 356.86 0.00 L 454.74 0.00 C 451.20 20.65 448.38 41.49 442.84 61.74 C 435.47 89.55 421.78 115.49 404.13 138.12 C 380.11 168.84 348.08 193.45 311.71 207.70 C 252.81 231.18 183.98 229.07 127.07 200.84 C 116.35 195.64 106.34 189.15 96.41 182.59 C 78.17 170.21 62.19 154.63 48.91 137.05 C 23.06 102.79 7.23 61.66 0.00 19.54 L 0.00 0.00 Z\" opacity=\"1.00\" />\r\n                <path ref={c} id=\"c\" fill=\"#ffffff\" d=\" M 500.43 243.52 C 524.46 234.57 550.49 230.36 576.08 233.17 C 577.12 233.50 579.57 232.87 579.14 234.82 C 580.06 264.34 580.41 293.91 578.73 323.41 C 558.65 331.52 536.42 333.17 516.95 342.96 C 505.75 348.93 495.13 356.19 486.28 365.34 C 462.17 389.85 449.34 424.77 451.22 459.03 C 450.76 474.19 453.80 489.39 459.82 503.30 C 471.35 529.96 492.26 552.01 516.99 566.94 C 535.75 577.93 557.86 579.77 578.79 583.70 C 580.41 615.54 579.95 647.44 578.99 679.29 C 537.21 680.13 495.62 667.72 460.20 645.79 C 426.32 624.95 397.57 595.53 378.45 560.58 C 363.46 533.21 354.61 502.31 354.09 471.05 C 354.14 464.37 353.36 457.72 353.36 451.04 C 352.62 390.81 378.80 330.83 423.42 290.38 C 446.19 270.59 472.08 254.07 500.43 243.52 Z\" opacity=\"1.00\" />\r\n                <path ref={l} id=\"l\" fill=\"#ffffff\" d=\" M 703.94 233.20 C 736.36 231.52 768.87 231.57 801.29 233.17 C 803.34 310.10 801.03 387.07 802.17 464.01 C 802.67 482.86 809.43 501.00 818.79 517.18 C 826.08 529.45 834.17 541.61 845.40 550.67 C 867.33 568.98 895.34 577.51 922.74 583.70 C 925.56 615.54 924.77 647.58 922.91 679.46 C 867.31 675.99 812.16 654.11 771.90 615.14 C 758.97 602.83 748.38 588.37 738.49 573.59 C 716.03 539.05 704.07 498.09 702.88 457.00 C 702.60 449.33 702.98 441.65 703.03 433.98 C 703.95 367.06 701.81 300.11 703.94 233.20 Z\" opacity=\"1.00\" />\r\n              </svg>\r\n              <span className=\"question\">{props.question}</span>\r\n              <Field name=\"answer\">{({ input }) => <input {...input} type=\"text\" placeholder=\"Dit svar\" autoComplete=\"off\" disabled={ submitting || props.confetti} />}</Field>\r\n              <button type=\"submit\" disabled={submitting || pristine || props.confetti}>\r\n                Svar\r\n              </button>\r\n              <div className=\"error\">\r\n                {submitError && <span className=\"errorMessage\">{submitError}</span>}\r\n                {submitError && props.hint && <span className=\"hint\">Hint: {props.hint}</span>}\r\n              </div>\r\n              {/* <UCL />x  */}\r\n\r\n              {/* <svg ref={loadingDivRef} height=\"100\" width=\"200\" visibility=\"hidden\">\r\n              <circle cx=\"50\" cy=\"50\" r=\"10\" fill=\"black\" />\r\n              <circle cx=\"100\" cy=\"50\" r=\"10\" fill=\"black\" />\r\n              <circle cx=\"150\" cy=\"50\" r=\"10\" fill=\"black\" />\r\n            </svg> */}\r\n              {/* <img ref={loadingDivRef} src={UCL} className=\"App-logo\" alt=\"logo\" /> */}\r\n            </form>\r\n            {/* {submitError && <span ref={failXRef}>X</span>}\r\n          {submitError || <span ref={successCheckMarkRef}>&#10004;</span>} */}\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction blinkLogoGreen(u: React.RefObject<SVGPathElement>, c: React.RefObject<SVGPathElement>, l: React.RefObject<SVGPathElement>) {\r\n  TweenMax.fromTo(\r\n    [u.current!, c.current!, l.current!],\r\n    0.5,\r\n    {\r\n      fill: \"white\"\r\n    },\r\n    {\r\n      fill: \"green\",\r\n      repeat: 1,\r\n      yoyo: true\r\n    }\r\n  );\r\n}\r\n\r\nfunction blinkLogoRed(u: React.RefObject<SVGPathElement>, c: React.RefObject<SVGPathElement>, l: React.RefObject<SVGPathElement>) {\r\n  TweenMax.fromTo(\r\n    [u.current!, c.current!, l.current!],\r\n    0.5,\r\n    {\r\n      fill: \"white\"\r\n    },\r\n    {\r\n      fill: \"red\",\r\n      repeat: 1,\r\n      yoyo: true\r\n    }\r\n  );\r\n}\r\n\r\nfunction rotateLogo(timeLine: TimelineMax, u: React.RefObject<SVGPathElement>, c: React.RefObject<SVGPathElement>, l: React.RefObject<SVGPathElement>) {\r\n  timeLine.to(u.current!, 1, {\r\n    rotation: 360,\r\n    transformOrigin: \"50% 50%\"\r\n  });\r\n  timeLine.to(c.current!, 1, {\r\n    rotation: 360,\r\n    transformOrigin: \"50% 50%\"\r\n  });\r\n  timeLine.to(l.current!, 1, {\r\n    rotation: 360,\r\n    transformOrigin: \"50% 50%\"\r\n  });\r\n}\r\n\r\nexport { QuizQuestion };\r\n","import React, { useState } from \"react\";\r\nimport { Layout } from \"../Layout/Layout\";\r\nimport { QuizQuestion } from \"../QuizQuestion/QuizQuestion\";\r\nimport { TimelineMax } from \"gsap\";\r\nimport { Line } from \"rc-progress\";\r\n\r\ninterface IQuestion {\r\n  question: string;\r\n  correctMd5Answers: string[];\r\n  hint?: string;\r\n  confetti?: boolean;\r\n}\r\n\r\nconst questions: IQuestion[] = [\r\n  { question: \"Hvad giver 101010? 🤔\", correctMd5Answers: [\"a1d0c6e83f027327d8461063f4ac58a6\"], hint: \"Hvad er svaret på livet, universet og alt?\" },\r\n  { question: \"1415926535. Hvilket tal tænker jeg på? 🤔\", correctMd5Answers: [\"72ab8af56bddab33b269c5964b26620a\", \"d2a0d0339fb01d4a6fb8089979c04fe0\", \"eccbc87e4b5ce2fe28308fd9f2a7baf3\"], hint: \"Mangler der et ciffer?\" },\r\n  { question: \"3 6 8 4 8 10 5 10. Hvad er det næste tal i rækken? 🤔\", correctMd5Answers: [\"c20ad4d76fe97759aa27a0c99bff6710\"], hint: \"For at knække mønsteret skal du tænke dig to gange om.\" },\r\n  { question: \"SELECT * FROM Customers. Hvilket sprog er det? 🤔\", correctMd5Answers: [\"ac5c74b64b4b8352ef2f181affb5ac2a\"], hint: \"Mange kalder det en sequel, men de færreste har hørt om den første.\" },\r\n  { question: \"#ff0000. Hvad betyder det? 🤔\", correctMd5Answers: [\"c72f8766eb9554693ae3e25342d5d5c0\", \"bda9643ac6601722a28f238714274da4\"], hint: \"Svaret er ikke komplementært.\" },\r\n  { question: \"21 3 10 70 10 17 119 17.  Hvad er det næste tal i rækken? 🤔\", correctMd5Answers: [\"1ff1de774005f8da13f42943881c655f\"], hint: \"Dette mønster kan få dig i syv sind.\" },\r\n  { question: \"Console.Writeline(”Hello World”); Hvilket sprog er det? 🤔\", correctMd5Answers: [\"240aa2cec4b29c56f3bee520a8dcee7e\", \"a20d785dbacb8f41a3b7392aa7d03b78\"], hint: \"Hvorfor bruger dataloger briller? Fordi de ikke kan...\" },\r\n  { question: \"Hvad giver 2A? 🤔\", correctMd5Answers: [\"a1d0c6e83f027327d8461063f4ac58a6\"], hint: \"0 1 2 3 4 5 6 7 8 9 A B C D E F\" },\r\n  { question: \"Du gennemførte quizzen! Tillykke! 🥳\", correctMd5Answers: [], confetti: true }\r\n];\r\n\r\nconst timeLine = new TimelineMax({ paused: true });\r\n\r\nconst App = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <Layout>\r\n      <QuizQuestion\r\n        {...questions[count]}\r\n        timeLine={timeLine}\r\n        renderNextQuestion={(success: boolean) => {\r\n          if (success) setCount(count + 1);\r\n        }}\r\n      />\r\n      <Line percent={getPercentFromCount(count)} strokeWidth={4} strokeColor={\"#FAE769\"}   />\r\n    </Layout>\r\n  );\r\n\r\n  function getPercentFromCount(count: number): number {\r\n    return (count + 1) / questions.length * 100;\r\n  }\r\n};\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport { App } from \"./components/App/App\";\r\n\r\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}